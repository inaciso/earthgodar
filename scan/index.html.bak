<!DOCTYPE html>
<html style="height: 100%;">

<head>
    <title>土地公收藏架</title>
	<style>
		
		@media all and (orientation: landscape) {
		  :root {
			
			--circleSize: 200px;

			}
		}
		@media all and (orientation: portrait) {
		  :root {
			--circleSize: 30vw;
;
			}
		}
				
		.circular--landscape { 
			display: inline-block; 
			position: relative; 
			max-width: 30vw;
			max-height: 30vw;
			width: var(--circleSize); 
			height: var(--circleSize); 
			overflow: hidden; 
			border-radius: 50%; 
			
			
		} 
		.circular--landscape img { 
			width: auto; 
			height: min(30vw, var(--circleSize)); 
			margin-left: max(calc(30vw * -0.4445), calc(var(--circleSize) * -0.4445)); 
		}

		.button{
			position:fixed;
			height:auto;
			width:auto;
			bottom:10vh;
			right:10vw;
			background-color:#ffffff;
			color:#DCDCDC;
			border-radius:2.5vw;
			text-align:center;
			font-size: 3vw;
			box-shadow: 0.5vw 0.5vw 1vw 0.5vw #DCDCDC;
		}
		
		.floatImg{
			height: 5vw;
			vertical-align:middle;
		}

		
	</style>
	
</head>
<body>

<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/50d0db06bf9e46c9b1d5ea55d7d0fbff/thumbnails/1c831eabc76c4b449eaf545e8fbaabed/fbfd06225a284b6cacccaef0dc38c4c8.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/8efb25d661de4342ac0068792c32359c/thumbnails/7df50ae5f6c3497ab740ebb56940409d/83a9be9a133a4150a5d2443fda945541.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/813fbe9516904a5b92de3f157d9fe21c/thumbnails/13e1f5d8b0d1411cb1a68d0a14993782/1b7546c0ee3c423e9c157185a58d104e.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/335f7d44308842778f9fc0133e2fabc9/thumbnails/1da56114007645ac9f3a25a991eaf39e/1035d609264c449ebaceda55d5577d0c.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/b4ab224237c74be69cc73e6caaa1d418/thumbnails/65fefe2cf22241129d4af2d48789b746/14f346f137b247adb9a245ff461d1aaa.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/50d0db06bf9e46c9b1d5ea55d7d0fbff/thumbnails/1c831eabc76c4b449eaf545e8fbaabed/fbfd06225a284b6cacccaef0dc38c4c8.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/e30e6f1bc96e4bf4af9b27262a4bc066/thumbnails/7c0071c7e259475abedd7f1ba932ad3a/b4de1f41a7f44031b9773fc006395e67.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/fc7b749a5b8a44f39e97c13a3fe568e2/thumbnails/22d825209f51417db2d8845d489bd28e/6422f24afd11415ca3e62edf8117705d.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/157ae294fb4a4f8a9795a75920d691e8/thumbnails/6f0f98a6195248c5b4eba41cba1d01f5/bf2b2bf2fb4d4110b8748592c93c9ef2.jpeg" /> </div>
<div class="circular--landscape"> <img src="https://media.sketchfab.com/models/8efb25d661de4342ac0068792c32359c/thumbnails/7df50ae5f6c3497ab740ebb56940409d/83a9be9a133a4150a5d2443fda945541.jpeg" /> </div>
<video id="qr-video"></video>
<a href="#" >
	<button class="button">
	請掃<img src="qr-code.svg" class="floatImg" id="start-button"></img>QR碼
	</button>
</a>
</body>
<script src="https://unpkg.com/html5-qrcode"></script>
<script>
	
</script>
<script type="module">
    import QrScanner from "../qr-scanner.min.js";
    QrScanner.WORKER_PATH = '../qr-scanner-worker.min.js';

    const video = document.getElementById('qr-video');

    const camQrResult = document.getElementById('cam-qr-result');
    const camQrResultTimestamp = document.getElementById('cam-qr-result-timestamp');


    function setResult(label, result) {
        label.textContent = result;
        camQrResultTimestamp.textContent = new Date().toString();
        label.style.color = 'teal';
        clearTimeout(label.highlightTimeout);
        label.highlightTimeout = setTimeout(() => label.style.color = 'inherit', 100);
    }

    // ####### Web Cam Scanning #######

    const scanner = new QrScanner(video, result => setResult(camQrResult, result), error => {
        camQrResult.textContent = error;
        camQrResult.style.color = 'inherit';
    });

    scanner.start().then(() => {
        // List cameras after the scanner started to avoid listCamera's stream and the scanner's stream being requested
        // at the same time which can result in listCamera's unconstrained stream also being offered to the scanner.
        // Note that we can also start the scanner after listCameras, we just have it this way around in the demo to
        // start the scanner earlier.
        QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
            const option = document.createElement('option');
            option.value = camera.id;
            option.text = camera.label;
            camList.add(option);
        }));
    });

    // for debugging
    window.scanner = scanner;

    document.getElementById('start-button').addEventListener('click', () => {
        scanner.start();
    });

    document.getElementById('stop-button').addEventListener('click', () => {
        scanner.stop();
    });

    // ####### File Scanning #######

    fileSelector.addEventListener('change', event => {
        const file = fileSelector.files[0];
        if (!file) {
            return;
        }
        QrScanner.scanImage(file)
            .then(result => setResult(fileQrResult, result))
            .catch(e => setResult(fileQrResult, e || 'No QR code found.'));
    });

</script>
</html>